리액트CRA

1. 리액트(react) 프로젝트 앱(app) 만들기(create)
npx   create-react-app   app
npx   create-react-app   just_shop


2. 프로젝트로 경로이동
   cd just_shop


3. 사스 SASS  설치하기    
   npm  install  sass


4. 패키지 제이슨 파일 열고 설치파일 확인한다.
   package.json 

  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "sass": "^1.56.1",     <==  설치확인
    "web-vitals": "^2.1.4"
  },


5. public 폴더 열고 : 파일 정리 삭제
   css
   js
   img
   index.html

6. public 폴더 열고 : index.html 
   - 헤더영역 환경설정
     사용언어 : ko
     파비콘 이미지스 경로  ./images/
     스타일 지정 <link ...>
     제이쿼리 오픈 스크립트 
     바벨 오픈 스크립트 

   - 바디영역 환경설정
     
     돔컨테이너 #root
     <div id="root"></div>

     제이쿼리 스크립트 사용자 파일 타입설정 type='text/babel'
     <script type="text/babel" src="./script/script.js"></script>

7. SRC : 컴포넌트.js, 인덱스.js, 스타일.css, 스타일.scss  등 환경설정하기
   - index.js는 리액트에서 정해진 이름이고 반드시 필요한 파일입니다.
   - index.js를 제외한 모든 불필요한 파일 모두 삭제 정리
   - index.js 내부 소스 정리하기
   - 아래와 같이 남기고 나머지 모두 삭제하기

//////////////////////////////////////////////////////////////////////////////////

      import React from 'react';
      import ReactDOM from 'react-dom/client';

      const root = ReactDOM.createRoot(document.getElementById('root'));
      root.render(
      
      );

//////////////////////////////////////////////////////////////////////////////////


8. 컴포넌트 폴더 만들기
   - 앱(app) 구성 모든 컴포넌트만들기
     컴포넌트 폴더이름 : components

9. 컴포넌트.js 만들기
   
     WrapComponent.js 
     
         HeaderComponent.js          
         MainComponent.js 
               Section1Component.js 
               Section2Component.js 

         FooterComponent.js 
         ModalComponent.js

10. 모든 컴포넌트 : 프롭스 와 상태관리 기본 프롭스 모두 복사 붙여넣기





깃 환경설정

user 이름
user 이메일

git config user.name 'hayeon252'
git config user.email 'hayeon252@naver.com'

화면 청소
clear

name 확인하기
email 확인하기

git config user.name
git config user.email

$ git config user.name
hayeon252

$ git config user.email
hayeon252@naver.com


//////////////////////////

깃허브 원격지 리파지토리(저장소) 주소 추가 지정 origin(url)

git remote add origin https://github.com/hayeon252/just_shop.git

원격지 리파지토리(저장소) 주소 확인하기
git remote -v

origin  https://github.com/hayeon252/just_shop.git (fetch)
origin  https://github.com/hayeon252/just_shop.git (push)

주소 확인 이상 없다


만약 잘못된 주소면 삭제하기
git remote remove origin

만약 잘못된 주소면 확인하기
git remote -v

//////////////////////////

스테이징 하기

모든(all) 파일 스테이징
git add .

커밋 하기
git commit -m '리액트 creact-react-app 저스트 쇼핑몰'

푸쉬(push) 하기
git push origin master


///////////////////////

웹페이지 / 파일 수정

다시 푸쉬

git add .
git commit -m '리액트 creact-react-app 저스트 쇼핑몰 수정 jsx'
git push origin master


//////////////////////////

배포하기(페이징)

1. 상단메뉴 Settings 클릭
2. 좌측 중간 하단에 Pages 메뉴 클릭
3. 우측에 GitHub Pages
4. Branch  
   GitHub Pages is currently disabled. Select a source below to enable GitHub Pages for this repository. Learn more.

   None/Save
   None 클릭 셀렉트 박스 열리면
   master 선택한다. => 우측 Save 클릭

5. 새로고침한다 F5
   Ctrl + Shift + R
   캐시까지 삭제하는 새로 고침

   Your site is live at https://hayeon252.github.io/just_shop/

   배포주소
   https://hayeon252.github.io/just_shop/

   30초 ~ 1분 대기
   그리고 접속

6. Deployment 도움사이트
   => 
   중간 아래
   GitHub Pages로 내려온다.

   Step 1: Add homepage to package.json
   //////////////////////////
   package.json => 깃허브 배포주소 속성과 주소 추가
   //////////////////////////
   포트폴리오 프로젝트
   package.json 에티터에서 연다

   맨 아래쪽에 추가 한다

   "homepage": "https://hayeon252.github.io/just_shop/"

   Step 2: Install gh-pages and add deploy to scripts in package.json
   //////////////////////////
   gh-pages => npm i gh-pages 설치or
               npm install --save gh-pages
   //////////////////////////
   Step 3: Deploy the site by running npm run deploy

7. 빌드하기
   npm run build